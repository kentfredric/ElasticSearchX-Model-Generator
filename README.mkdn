# NAME

ElasticSearchX::Model::Generator - Create a suite of ESX::Model classes from an existing mapping.

# VERSION

version 0.1.4

# SYNOPSIS

    use ElasticSearchX::Model::Generator qw( generate_model );

    my $instance = generate_model(
      mapping_url => 'http://someserver:port/path/_mapping',
      generated_base_class => 'MyModel',
      base_dir => "../path/to/export/dir/"
    );

    for my $document ( $instance->documents ) {
      # Write the document to disk
      $document->write();
      # Alternatively, load the generated document into memory avoiding writing to disk
      $document->evaluate();
    }

# DESCRIPTION

__ALPHA Code__: This class at present only contains code sufficient for very simple package generation for use in creating a model from an existing mapping for the purposes of search.

# EXPORTS

## generate\_model

this is just a sugar syntax for ESX:M:G->new() you can elect to import to make your code slightly shorter.

# METHODS

## index\_names

    @names = $esmg->index_names

returns the names of all indexes specified in the `_mapping`

## index

    $data = $esmg->index('') # If indexes are not in the data set
    $data = $esmg->index('cpan_v1') # if indexes are in the data set

Returns the data set nested under the specified index.

## type\_names

    @names = $esmg->type_names( $index )
    @names = $esmg->type_names('')  # return all types defined in an index-free dataset.
    @names = $esmg->type_names('cpan_v1') # return all types in the cpan_v1 index.

## type

    $data = $esmg->type( $index, $type )
    $data = $esmg->type( '', 'File' )    # get type 'File' from an index-free dataset
    $data = $esmg->type( 'cpan_v1', 'File' )    # get type 'File' from the cpan_v1 index

## property\_names

    @names = $esmg->property_names( $index, $type )

## properties

    $properties = $esmg->properties( $index, $type )

## property

    $property = $esmg->property( $index, $type, $propertyname )

## documents

    @documents = $esmg->documents(); # all documents for all indexes
    @documents = $esmg->documents('cpan_v1'); # all documents for cpan_v1
    @documents = $esmg->documents(''); # all documents for an index-free dataset.

# ATTRIBUTES

## mapping\_url

    rw, required

## base\_dir

    rw, required

## generator\_base\_class

    rw, default: ElasticSearchX::Model::Generator

## generated\_base\_class

    rw, default: MyModel

## document\_generator\_class

    lazy

## attribute\_generator\_class

    lazy

## typename\_translator\_class

    lazy

## document\_generator

    lazy

## attribute\_generator

    lazy

## typename\_translator

    lazy

# PRIVATE ATTRIBUTES

## \_mapping\_content

    lazy

## \_ua

    lazy

## \_mapping\_data

    lazy

# PRIVATE METHODS

## \_build\_\_ua

returns an `HTTP::Tiny` instance.

## \_build\_document\_generator\_class

    generator_base_class + '::DocumentGenerator'

## \_build\_document\_generator

returns an instance of `$document_generator_class`

## \_build\_attribute\_generator\_class

    generator_base_class + '::AttributeGenerator'

## \_build\_attribute\_generator

returns an instance of `$attribute_generator_class`

## \_build\_typename\_translator\_class

    generator_base_class + '::TypenameTranslator'

## \_build\_typename\_translator

returns an instance of `$typename_translator_class`

## \_build\_\_mapping\_content

returns the content of the URL at `mapping_url`

## \_build\_\_mapping\_data

returns the decoded data from `JSON` stored in `_mapping_content`

# AUTHOR

Kent Fredric <kentfredric@gmail.com>

# COPYRIGHT AND LICENSE

This software is copyright (c) 2013 by Kent Fredric <kentfredric@gmail.com>.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
